x-db-environment: &x-db-environment
  POSTGRES_SSL_MODE: "disable"
  POSTGRES_HOST: "db"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "db"
  POSTGRES_PASSWORD: "password"
  POSTGRES_USER: "user"

x-backend-app-environment: &x-backend-app-environment
  # App settings
  APP_NAME: "activity-planner"

  ### Databases

  # Activity context
  DB_ACTIVITY_DRIVER: "postgres"
  DB_ACTIVITY_HOST: "db"
  DB_ACTIVITY_PORT: "5432"
  DB_ACTIVITY_USER: "user"
  DB_ACTIVITY_PASSWORD: "password"
  DB_ACTIVITY_DATABASE: "activity"
  DB_ACTIVITY_SSLMODE: "disable"

  # Attendance context
  DB_ATTENDANCE_DRIVER: "postgres"
  DB_ATTENDANCE_HOST: "db"
  DB_ATTENDANCE_PORT: "5432"
  DB_ATTENDANCE_USER: "user"
  DB_ATTENDANCE_PASSWORD: "password"
  DB_ATTENDANCE_DATABASE: "attendance"
  DB_ATTENDANCE_SSLMODE: "disable"

  # Postgres
  PG_POOL_MAX: "2"
  PG_URL: "postgres://user:password@db:5432/db?sslmode=disable"
  # Go
  GO111MODULE: on

  # Tracing
  TRACE_ENDPOINT: "jaeger:4318"

  # OTEL
  OTEL_LOG_LEVEL: "debug"
  OTEL_EXPORTER_JAEGER_LOG_SPANS: true

services:
  db:
    container_name: db
    image: postgres:17-alpine
    environment:
      <<: *x-db-environment
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db" ]
      interval: 5s
      retries: 5
    networks:
      app_network:
        aliases:
          - db.lvh.me
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      <<: *x-backend-app-environment
    command: air
#    ports:
#      - "8080:8080"
    depends_on:
      - db
      - jaeger
    networks:
      app_network:
        aliases:
          - app.lvh.me

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"        # Jaeger UI
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      app_network:
        aliases:
          - jaeger.lvh.me

  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    command:
      - start-dev
      - --import-realm
      - --db=postgres
      - --db-url-host=db
      - --db-url-port=5432
      - --db-url-database=keycloak
      - --db-username=user
      - --db-password=password
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
    depends_on:
      - db
    ports:
      - "8081:8080"
    volumes:
      - ./config/keycloak/realms:/opt/keycloak/data/import:ro
    networks:
      app_network:
        aliases:
          - auth.lvh.me

  oathkeeper:
    image: oryd/oathkeeper:v0.40
    command: serve --config /etc/config/oathkeeper.yml
    volumes:
      - ./config/oathkeeper/oathkeeper.yml:/etc/config/oathkeeper.yml:ro
      - ./config/oathkeeper/access-rules.yml:/etc/config/access-rules.yml:ro
    ports:
      - "4455:4455"  # proxy
      - "4456:4456"  # API
    depends_on:
      - keycloak
      - app
    networks:
      app_network:
        aliases:
          - oathkeeper.lvh.me

#  app:
#    container_name: app
#    platform: linux/amd64
#    pid: "host"
#    build:
#      context: .
#    environment:
#      <<: *x-backend-app-environment
#    ports:
#      - "8080:8080"
#      - "8081:8081"
#    depends_on:
#      - db
#    networks:
#      app_network:
#        aliases:
#          - app.lvh.me

networks:
  app_network:
    external: false


volumes:
  db_data:
