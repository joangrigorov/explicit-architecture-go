// Code generated by ent, DO NOT EDIT.

package attendance

import (
	"app/internal/infrastructure/component/attendance/persistence/ent/generated/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldID, id))
}

// AttendeeID applies equality check predicate on the "attendee_id" field. It's identical to AttendeeIDEQ.
func AttendeeID(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldAttendeeID, v))
}

// ActivityID applies equality check predicate on the "activity_id" field. It's identical to ActivityIDEQ.
func ActivityID(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityID, v))
}

// ActivitySlug applies equality check predicate on the "activity_slug" field. It's identical to ActivitySlugEQ.
func ActivitySlug(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivitySlug, v))
}

// ActivityTitle applies equality check predicate on the "activity_title" field. It's identical to ActivityTitleEQ.
func ActivityTitle(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityTitle, v))
}

// ActivityPosterImageURL applies equality check predicate on the "activity_poster_image_url" field. It's identical to ActivityPosterImageURLEQ.
func ActivityPosterImageURL(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityPosterImageURL, v))
}

// ActivityShortDescription applies equality check predicate on the "activity_short_description" field. It's identical to ActivityShortDescriptionEQ.
func ActivityShortDescription(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityShortDescription, v))
}

// ActivityHappensAt applies equality check predicate on the "activity_happens_at" field. It's identical to ActivityHappensAtEQ.
func ActivityHappensAt(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityHappensAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldDeletedAt, v))
}

// AttendeeIDEQ applies the EQ predicate on the "attendee_id" field.
func AttendeeIDEQ(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldAttendeeID, v))
}

// AttendeeIDNEQ applies the NEQ predicate on the "attendee_id" field.
func AttendeeIDNEQ(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldAttendeeID, v))
}

// AttendeeIDIn applies the In predicate on the "attendee_id" field.
func AttendeeIDIn(vs ...uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldAttendeeID, vs...))
}

// AttendeeIDNotIn applies the NotIn predicate on the "attendee_id" field.
func AttendeeIDNotIn(vs ...uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldAttendeeID, vs...))
}

// AttendeeIDGT applies the GT predicate on the "attendee_id" field.
func AttendeeIDGT(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldAttendeeID, v))
}

// AttendeeIDGTE applies the GTE predicate on the "attendee_id" field.
func AttendeeIDGTE(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldAttendeeID, v))
}

// AttendeeIDLT applies the LT predicate on the "attendee_id" field.
func AttendeeIDLT(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldAttendeeID, v))
}

// AttendeeIDLTE applies the LTE predicate on the "attendee_id" field.
func AttendeeIDLTE(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldAttendeeID, v))
}

// ActivityIDEQ applies the EQ predicate on the "activity_id" field.
func ActivityIDEQ(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityID, v))
}

// ActivityIDNEQ applies the NEQ predicate on the "activity_id" field.
func ActivityIDNEQ(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldActivityID, v))
}

// ActivityIDIn applies the In predicate on the "activity_id" field.
func ActivityIDIn(vs ...uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldActivityID, vs...))
}

// ActivityIDNotIn applies the NotIn predicate on the "activity_id" field.
func ActivityIDNotIn(vs ...uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldActivityID, vs...))
}

// ActivityIDGT applies the GT predicate on the "activity_id" field.
func ActivityIDGT(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldActivityID, v))
}

// ActivityIDGTE applies the GTE predicate on the "activity_id" field.
func ActivityIDGTE(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldActivityID, v))
}

// ActivityIDLT applies the LT predicate on the "activity_id" field.
func ActivityIDLT(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldActivityID, v))
}

// ActivityIDLTE applies the LTE predicate on the "activity_id" field.
func ActivityIDLTE(v uuid.UUID) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldActivityID, v))
}

// ActivitySlugEQ applies the EQ predicate on the "activity_slug" field.
func ActivitySlugEQ(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivitySlug, v))
}

// ActivitySlugNEQ applies the NEQ predicate on the "activity_slug" field.
func ActivitySlugNEQ(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldActivitySlug, v))
}

// ActivitySlugIn applies the In predicate on the "activity_slug" field.
func ActivitySlugIn(vs ...string) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldActivitySlug, vs...))
}

// ActivitySlugNotIn applies the NotIn predicate on the "activity_slug" field.
func ActivitySlugNotIn(vs ...string) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldActivitySlug, vs...))
}

// ActivitySlugGT applies the GT predicate on the "activity_slug" field.
func ActivitySlugGT(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldActivitySlug, v))
}

// ActivitySlugGTE applies the GTE predicate on the "activity_slug" field.
func ActivitySlugGTE(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldActivitySlug, v))
}

// ActivitySlugLT applies the LT predicate on the "activity_slug" field.
func ActivitySlugLT(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldActivitySlug, v))
}

// ActivitySlugLTE applies the LTE predicate on the "activity_slug" field.
func ActivitySlugLTE(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldActivitySlug, v))
}

// ActivitySlugContains applies the Contains predicate on the "activity_slug" field.
func ActivitySlugContains(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldContains(FieldActivitySlug, v))
}

// ActivitySlugHasPrefix applies the HasPrefix predicate on the "activity_slug" field.
func ActivitySlugHasPrefix(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldHasPrefix(FieldActivitySlug, v))
}

// ActivitySlugHasSuffix applies the HasSuffix predicate on the "activity_slug" field.
func ActivitySlugHasSuffix(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldHasSuffix(FieldActivitySlug, v))
}

// ActivitySlugEqualFold applies the EqualFold predicate on the "activity_slug" field.
func ActivitySlugEqualFold(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEqualFold(FieldActivitySlug, v))
}

// ActivitySlugContainsFold applies the ContainsFold predicate on the "activity_slug" field.
func ActivitySlugContainsFold(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldContainsFold(FieldActivitySlug, v))
}

// ActivityTitleEQ applies the EQ predicate on the "activity_title" field.
func ActivityTitleEQ(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityTitle, v))
}

// ActivityTitleNEQ applies the NEQ predicate on the "activity_title" field.
func ActivityTitleNEQ(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldActivityTitle, v))
}

// ActivityTitleIn applies the In predicate on the "activity_title" field.
func ActivityTitleIn(vs ...string) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldActivityTitle, vs...))
}

// ActivityTitleNotIn applies the NotIn predicate on the "activity_title" field.
func ActivityTitleNotIn(vs ...string) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldActivityTitle, vs...))
}

// ActivityTitleGT applies the GT predicate on the "activity_title" field.
func ActivityTitleGT(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldActivityTitle, v))
}

// ActivityTitleGTE applies the GTE predicate on the "activity_title" field.
func ActivityTitleGTE(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldActivityTitle, v))
}

// ActivityTitleLT applies the LT predicate on the "activity_title" field.
func ActivityTitleLT(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldActivityTitle, v))
}

// ActivityTitleLTE applies the LTE predicate on the "activity_title" field.
func ActivityTitleLTE(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldActivityTitle, v))
}

// ActivityTitleContains applies the Contains predicate on the "activity_title" field.
func ActivityTitleContains(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldContains(FieldActivityTitle, v))
}

// ActivityTitleHasPrefix applies the HasPrefix predicate on the "activity_title" field.
func ActivityTitleHasPrefix(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldHasPrefix(FieldActivityTitle, v))
}

// ActivityTitleHasSuffix applies the HasSuffix predicate on the "activity_title" field.
func ActivityTitleHasSuffix(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldHasSuffix(FieldActivityTitle, v))
}

// ActivityTitleEqualFold applies the EqualFold predicate on the "activity_title" field.
func ActivityTitleEqualFold(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEqualFold(FieldActivityTitle, v))
}

// ActivityTitleContainsFold applies the ContainsFold predicate on the "activity_title" field.
func ActivityTitleContainsFold(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldContainsFold(FieldActivityTitle, v))
}

// ActivityPosterImageURLEQ applies the EQ predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLEQ(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLNEQ applies the NEQ predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLNEQ(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLIn applies the In predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLIn(vs ...string) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldActivityPosterImageURL, vs...))
}

// ActivityPosterImageURLNotIn applies the NotIn predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLNotIn(vs ...string) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldActivityPosterImageURL, vs...))
}

// ActivityPosterImageURLGT applies the GT predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLGT(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLGTE applies the GTE predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLGTE(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLLT applies the LT predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLLT(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLLTE applies the LTE predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLLTE(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLContains applies the Contains predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLContains(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldContains(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLHasPrefix applies the HasPrefix predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLHasPrefix(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldHasPrefix(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLHasSuffix applies the HasSuffix predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLHasSuffix(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldHasSuffix(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLEqualFold applies the EqualFold predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLEqualFold(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEqualFold(FieldActivityPosterImageURL, v))
}

// ActivityPosterImageURLContainsFold applies the ContainsFold predicate on the "activity_poster_image_url" field.
func ActivityPosterImageURLContainsFold(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldContainsFold(FieldActivityPosterImageURL, v))
}

// ActivityShortDescriptionEQ applies the EQ predicate on the "activity_short_description" field.
func ActivityShortDescriptionEQ(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionNEQ applies the NEQ predicate on the "activity_short_description" field.
func ActivityShortDescriptionNEQ(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionIn applies the In predicate on the "activity_short_description" field.
func ActivityShortDescriptionIn(vs ...string) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldActivityShortDescription, vs...))
}

// ActivityShortDescriptionNotIn applies the NotIn predicate on the "activity_short_description" field.
func ActivityShortDescriptionNotIn(vs ...string) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldActivityShortDescription, vs...))
}

// ActivityShortDescriptionGT applies the GT predicate on the "activity_short_description" field.
func ActivityShortDescriptionGT(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionGTE applies the GTE predicate on the "activity_short_description" field.
func ActivityShortDescriptionGTE(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionLT applies the LT predicate on the "activity_short_description" field.
func ActivityShortDescriptionLT(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionLTE applies the LTE predicate on the "activity_short_description" field.
func ActivityShortDescriptionLTE(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionContains applies the Contains predicate on the "activity_short_description" field.
func ActivityShortDescriptionContains(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldContains(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionHasPrefix applies the HasPrefix predicate on the "activity_short_description" field.
func ActivityShortDescriptionHasPrefix(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldHasPrefix(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionHasSuffix applies the HasSuffix predicate on the "activity_short_description" field.
func ActivityShortDescriptionHasSuffix(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldHasSuffix(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionEqualFold applies the EqualFold predicate on the "activity_short_description" field.
func ActivityShortDescriptionEqualFold(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldEqualFold(FieldActivityShortDescription, v))
}

// ActivityShortDescriptionContainsFold applies the ContainsFold predicate on the "activity_short_description" field.
func ActivityShortDescriptionContainsFold(v string) predicate.Attendance {
	return predicate.Attendance(sql.FieldContainsFold(FieldActivityShortDescription, v))
}

// ActivityHappensAtEQ applies the EQ predicate on the "activity_happens_at" field.
func ActivityHappensAtEQ(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldActivityHappensAt, v))
}

// ActivityHappensAtNEQ applies the NEQ predicate on the "activity_happens_at" field.
func ActivityHappensAtNEQ(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldActivityHappensAt, v))
}

// ActivityHappensAtIn applies the In predicate on the "activity_happens_at" field.
func ActivityHappensAtIn(vs ...time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldActivityHappensAt, vs...))
}

// ActivityHappensAtNotIn applies the NotIn predicate on the "activity_happens_at" field.
func ActivityHappensAtNotIn(vs ...time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldActivityHappensAt, vs...))
}

// ActivityHappensAtGT applies the GT predicate on the "activity_happens_at" field.
func ActivityHappensAtGT(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldActivityHappensAt, v))
}

// ActivityHappensAtGTE applies the GTE predicate on the "activity_happens_at" field.
func ActivityHappensAtGTE(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldActivityHappensAt, v))
}

// ActivityHappensAtLT applies the LT predicate on the "activity_happens_at" field.
func ActivityHappensAtLT(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldActivityHappensAt, v))
}

// ActivityHappensAtLTE applies the LTE predicate on the "activity_happens_at" field.
func ActivityHappensAtLTE(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldActivityHappensAt, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Attendance {
	return predicate.Attendance(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Attendance {
	return predicate.Attendance(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Attendance {
	return predicate.Attendance(sql.FieldNotNull(FieldDeletedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Attendance) predicate.Attendance {
	return predicate.Attendance(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Attendance) predicate.Attendance {
	return predicate.Attendance(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Attendance) predicate.Attendance {
	return predicate.Attendance(sql.NotPredicates(p))
}
