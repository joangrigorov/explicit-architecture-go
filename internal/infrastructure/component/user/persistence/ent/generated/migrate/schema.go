// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "member"}},
		{Name: "confirmed_at", Type: field.TypeTime, Nullable: true},
		{Name: "idp_user_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_role",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[5]},
			},
			{
				Name:    "user_confirmed_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[6]},
			},
			{
				Name:    "user_created_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[8]},
			},
			{
				Name:    "user_updated_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[9]},
			},
			{
				Name:    "user_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[10]},
			},
		},
	}
	// VerificationsColumns holds the columns for the "verifications" table.
	VerificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID, Unique: true},
		{Name: "user_email_masked", Type: field.TypeString},
		{Name: "csrf_token", Type: field.TypeString, Size: 2147483647},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "used_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// VerificationsTable holds the schema information for the "verifications" table.
	VerificationsTable = &schema.Table{
		Name:       "verifications",
		Columns:    VerificationsColumns,
		PrimaryKey: []*schema.Column{VerificationsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "verification_expires_at",
				Unique:  false,
				Columns: []*schema.Column{VerificationsColumns[4]},
			},
			{
				Name:    "verification_used_at",
				Unique:  false,
				Columns: []*schema.Column{VerificationsColumns[5]},
			},
			{
				Name:    "verification_created_at",
				Unique:  false,
				Columns: []*schema.Column{VerificationsColumns[6]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UsersTable,
		VerificationsTable,
	}
)

func init() {
}
