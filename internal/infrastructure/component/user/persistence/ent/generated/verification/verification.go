// Code generated by ent, DO NOT EDIT.

package verification

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the verification type in the database.
	Label = "verification"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldUserEmailMasked holds the string denoting the user_email_masked field in the database.
	FieldUserEmailMasked = "user_email_masked"
	// FieldCsrfToken holds the string denoting the csrf_token field in the database.
	FieldCsrfToken = "csrf_token"
	// FieldExpiresAt holds the string denoting the expires_at field in the database.
	FieldExpiresAt = "expires_at"
	// FieldUsedAt holds the string denoting the used_at field in the database.
	FieldUsedAt = "used_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the verification in the database.
	Table = "verifications"
)

// Columns holds all SQL columns for verification fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldUserEmailMasked,
	FieldCsrfToken,
	FieldExpiresAt,
	FieldUsedAt,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Verification queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUserID orders the results by the user_id field.
func ByUserID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserID, opts...).ToFunc()
}

// ByUserEmailMasked orders the results by the user_email_masked field.
func ByUserEmailMasked(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserEmailMasked, opts...).ToFunc()
}

// ByCsrfToken orders the results by the csrf_token field.
func ByCsrfToken(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCsrfToken, opts...).ToFunc()
}

// ByExpiresAt orders the results by the expires_at field.
func ByExpiresAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExpiresAt, opts...).ToFunc()
}

// ByUsedAt orders the results by the used_at field.
func ByUsedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUsedAt, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
