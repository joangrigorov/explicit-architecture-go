// Code generated by ent, DO NOT EDIT.

package activity

import (
	"app/internal/infrastructure/persistence/ent/generated/activity/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldID, id))
}

// Slug applies equality check predicate on the "slug" field. It's identical to SlugEQ.
func Slug(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldSlug, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldTitle, v))
}

// PosterImageURL applies equality check predicate on the "poster_image_url" field. It's identical to PosterImageURLEQ.
func PosterImageURL(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldPosterImageURL, v))
}

// ShortDescription applies equality check predicate on the "short_description" field. It's identical to ShortDescriptionEQ.
func ShortDescription(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldShortDescription, v))
}

// FullDescription applies equality check predicate on the "full_description" field. It's identical to FullDescriptionEQ.
func FullDescription(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldFullDescription, v))
}

// HappensAt applies equality check predicate on the "happens_at" field. It's identical to HappensAtEQ.
func HappensAt(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldHappensAt, v))
}

// Attendants applies equality check predicate on the "attendants" field. It's identical to AttendantsEQ.
func Attendants(v int) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldAttendants, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldDeletedAt, v))
}

// SlugEQ applies the EQ predicate on the "slug" field.
func SlugEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldSlug, v))
}

// SlugNEQ applies the NEQ predicate on the "slug" field.
func SlugNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldSlug, v))
}

// SlugIn applies the In predicate on the "slug" field.
func SlugIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldSlug, vs...))
}

// SlugNotIn applies the NotIn predicate on the "slug" field.
func SlugNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldSlug, vs...))
}

// SlugGT applies the GT predicate on the "slug" field.
func SlugGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldSlug, v))
}

// SlugGTE applies the GTE predicate on the "slug" field.
func SlugGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldSlug, v))
}

// SlugLT applies the LT predicate on the "slug" field.
func SlugLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldSlug, v))
}

// SlugLTE applies the LTE predicate on the "slug" field.
func SlugLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldSlug, v))
}

// SlugContains applies the Contains predicate on the "slug" field.
func SlugContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldSlug, v))
}

// SlugHasPrefix applies the HasPrefix predicate on the "slug" field.
func SlugHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldSlug, v))
}

// SlugHasSuffix applies the HasSuffix predicate on the "slug" field.
func SlugHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldSlug, v))
}

// SlugEqualFold applies the EqualFold predicate on the "slug" field.
func SlugEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldSlug, v))
}

// SlugContainsFold applies the ContainsFold predicate on the "slug" field.
func SlugContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldSlug, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldTitle, v))
}

// PosterImageURLEQ applies the EQ predicate on the "poster_image_url" field.
func PosterImageURLEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldPosterImageURL, v))
}

// PosterImageURLNEQ applies the NEQ predicate on the "poster_image_url" field.
func PosterImageURLNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldPosterImageURL, v))
}

// PosterImageURLIn applies the In predicate on the "poster_image_url" field.
func PosterImageURLIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldPosterImageURL, vs...))
}

// PosterImageURLNotIn applies the NotIn predicate on the "poster_image_url" field.
func PosterImageURLNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldPosterImageURL, vs...))
}

// PosterImageURLGT applies the GT predicate on the "poster_image_url" field.
func PosterImageURLGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldPosterImageURL, v))
}

// PosterImageURLGTE applies the GTE predicate on the "poster_image_url" field.
func PosterImageURLGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldPosterImageURL, v))
}

// PosterImageURLLT applies the LT predicate on the "poster_image_url" field.
func PosterImageURLLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldPosterImageURL, v))
}

// PosterImageURLLTE applies the LTE predicate on the "poster_image_url" field.
func PosterImageURLLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldPosterImageURL, v))
}

// PosterImageURLContains applies the Contains predicate on the "poster_image_url" field.
func PosterImageURLContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldPosterImageURL, v))
}

// PosterImageURLHasPrefix applies the HasPrefix predicate on the "poster_image_url" field.
func PosterImageURLHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldPosterImageURL, v))
}

// PosterImageURLHasSuffix applies the HasSuffix predicate on the "poster_image_url" field.
func PosterImageURLHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldPosterImageURL, v))
}

// PosterImageURLEqualFold applies the EqualFold predicate on the "poster_image_url" field.
func PosterImageURLEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldPosterImageURL, v))
}

// PosterImageURLContainsFold applies the ContainsFold predicate on the "poster_image_url" field.
func PosterImageURLContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldPosterImageURL, v))
}

// ShortDescriptionEQ applies the EQ predicate on the "short_description" field.
func ShortDescriptionEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldShortDescription, v))
}

// ShortDescriptionNEQ applies the NEQ predicate on the "short_description" field.
func ShortDescriptionNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldShortDescription, v))
}

// ShortDescriptionIn applies the In predicate on the "short_description" field.
func ShortDescriptionIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldShortDescription, vs...))
}

// ShortDescriptionNotIn applies the NotIn predicate on the "short_description" field.
func ShortDescriptionNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldShortDescription, vs...))
}

// ShortDescriptionGT applies the GT predicate on the "short_description" field.
func ShortDescriptionGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldShortDescription, v))
}

// ShortDescriptionGTE applies the GTE predicate on the "short_description" field.
func ShortDescriptionGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldShortDescription, v))
}

// ShortDescriptionLT applies the LT predicate on the "short_description" field.
func ShortDescriptionLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldShortDescription, v))
}

// ShortDescriptionLTE applies the LTE predicate on the "short_description" field.
func ShortDescriptionLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldShortDescription, v))
}

// ShortDescriptionContains applies the Contains predicate on the "short_description" field.
func ShortDescriptionContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldShortDescription, v))
}

// ShortDescriptionHasPrefix applies the HasPrefix predicate on the "short_description" field.
func ShortDescriptionHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldShortDescription, v))
}

// ShortDescriptionHasSuffix applies the HasSuffix predicate on the "short_description" field.
func ShortDescriptionHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldShortDescription, v))
}

// ShortDescriptionEqualFold applies the EqualFold predicate on the "short_description" field.
func ShortDescriptionEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldShortDescription, v))
}

// ShortDescriptionContainsFold applies the ContainsFold predicate on the "short_description" field.
func ShortDescriptionContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldShortDescription, v))
}

// FullDescriptionEQ applies the EQ predicate on the "full_description" field.
func FullDescriptionEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldFullDescription, v))
}

// FullDescriptionNEQ applies the NEQ predicate on the "full_description" field.
func FullDescriptionNEQ(v string) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldFullDescription, v))
}

// FullDescriptionIn applies the In predicate on the "full_description" field.
func FullDescriptionIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldFullDescription, vs...))
}

// FullDescriptionNotIn applies the NotIn predicate on the "full_description" field.
func FullDescriptionNotIn(vs ...string) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldFullDescription, vs...))
}

// FullDescriptionGT applies the GT predicate on the "full_description" field.
func FullDescriptionGT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldFullDescription, v))
}

// FullDescriptionGTE applies the GTE predicate on the "full_description" field.
func FullDescriptionGTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldFullDescription, v))
}

// FullDescriptionLT applies the LT predicate on the "full_description" field.
func FullDescriptionLT(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldFullDescription, v))
}

// FullDescriptionLTE applies the LTE predicate on the "full_description" field.
func FullDescriptionLTE(v string) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldFullDescription, v))
}

// FullDescriptionContains applies the Contains predicate on the "full_description" field.
func FullDescriptionContains(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContains(FieldFullDescription, v))
}

// FullDescriptionHasPrefix applies the HasPrefix predicate on the "full_description" field.
func FullDescriptionHasPrefix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasPrefix(FieldFullDescription, v))
}

// FullDescriptionHasSuffix applies the HasSuffix predicate on the "full_description" field.
func FullDescriptionHasSuffix(v string) predicate.Activity {
	return predicate.Activity(sql.FieldHasSuffix(FieldFullDescription, v))
}

// FullDescriptionEqualFold applies the EqualFold predicate on the "full_description" field.
func FullDescriptionEqualFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldEqualFold(FieldFullDescription, v))
}

// FullDescriptionContainsFold applies the ContainsFold predicate on the "full_description" field.
func FullDescriptionContainsFold(v string) predicate.Activity {
	return predicate.Activity(sql.FieldContainsFold(FieldFullDescription, v))
}

// HappensAtEQ applies the EQ predicate on the "happens_at" field.
func HappensAtEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldHappensAt, v))
}

// HappensAtNEQ applies the NEQ predicate on the "happens_at" field.
func HappensAtNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldHappensAt, v))
}

// HappensAtIn applies the In predicate on the "happens_at" field.
func HappensAtIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldHappensAt, vs...))
}

// HappensAtNotIn applies the NotIn predicate on the "happens_at" field.
func HappensAtNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldHappensAt, vs...))
}

// HappensAtGT applies the GT predicate on the "happens_at" field.
func HappensAtGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldHappensAt, v))
}

// HappensAtGTE applies the GTE predicate on the "happens_at" field.
func HappensAtGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldHappensAt, v))
}

// HappensAtLT applies the LT predicate on the "happens_at" field.
func HappensAtLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldHappensAt, v))
}

// HappensAtLTE applies the LTE predicate on the "happens_at" field.
func HappensAtLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldHappensAt, v))
}

// AttendantsEQ applies the EQ predicate on the "attendants" field.
func AttendantsEQ(v int) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldAttendants, v))
}

// AttendantsNEQ applies the NEQ predicate on the "attendants" field.
func AttendantsNEQ(v int) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldAttendants, v))
}

// AttendantsIn applies the In predicate on the "attendants" field.
func AttendantsIn(vs ...int) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldAttendants, vs...))
}

// AttendantsNotIn applies the NotIn predicate on the "attendants" field.
func AttendantsNotIn(vs ...int) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldAttendants, vs...))
}

// AttendantsGT applies the GT predicate on the "attendants" field.
func AttendantsGT(v int) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldAttendants, v))
}

// AttendantsGTE applies the GTE predicate on the "attendants" field.
func AttendantsGTE(v int) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldAttendants, v))
}

// AttendantsLT applies the LT predicate on the "attendants" field.
func AttendantsLT(v int) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldAttendants, v))
}

// AttendantsLTE applies the LTE predicate on the "attendants" field.
func AttendantsLTE(v int) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldAttendants, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Activity {
	return predicate.Activity(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Activity {
	return predicate.Activity(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Activity {
	return predicate.Activity(sql.FieldNotNull(FieldDeletedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Activity) predicate.Activity {
	return predicate.Activity(sql.NotPredicates(p))
}
